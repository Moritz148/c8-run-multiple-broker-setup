# While the Docker images themselves are supported for production usage,
# this docker-compose.yaml is designed to be used by developers to run
# an environment locally. It is not designed to be used in production.
# We recommend to use Kubernetes in production with our Helm Charts:
# https://docs.camunda.io/docs/self-managed/setup/install/
# For local development, we recommend using KIND instead of `docker-compose`:
# https://docs.camunda.io/docs/self-managed/platform-deployment/helm-kubernetes/guides/local-kubernetes-cluster/

# This is a lightweight configuration with Zeebe, Operate, Tasklist, and Elasticsearch
# See docker-compose.yml for a configuration that also includes Optimize, Identity, and Keycloak.

services:

  elasticsearch: # https://hub.docker.com/_/elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      # allow running with low disk space
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -sSf http://localhost:9200/_cluster/health | grep -q '\"status\":\"green\"\\|\"status\":\"yellow\"'" ]
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s

    volumes:
      - elastic:/usr/share/elasticsearch/data
    networks:
      - camunda-platform

  # Zeebe Brokers (no embedded Gateway)
  zeebe0: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#zeebe
    image: camunda/zeebe:${CAMUNDA_ZEEBE_VERSION}
    container_name: zeebe0
    volumes:
      - ./config/zeebe/broker-0.yaml:/usr/local/zeebe/config/application.yaml:ro
      - zeebe0:/usr/local/zeebe/data
    environment:
      - ZEEBE_LOG_LEVEL=info
      - ZEEBE_BROKER_GATEWAY_ENABLE=false
      - ZEEBE_BROKER_CLUSTER_CLUSTER_SIZE=3
      - ZEEBE_BROKER_CLUSTER_REPLICATION_FACTOR=3
      - ZEEBE_BROKER_CLUSTER_PARTITIONS_COUNT=3
      - ZEEBE_BROKER_CLUSTER_NODE_ID=0
      - ZEEBE_BROKER_CLUSTER_INITIAL_CONTACT_POINTS=zeebe0:26502,zeebe1:26502,zeebe2:26502
      - ZEEBE_BROKER_NETWORK_ADVERTISED_HOST=zeebe0
      - ZEEBE_BROKER_NETWORK_COMMAND_API_PORT=26501
      - ZEEBE_BROKER_NETWORK_INTERNAL_API_PORT=26502
      - ZEEBE_BROKER_NETWORK_MONITORING_API_PORT=9600
      #Threads & Snapshots porduktiv-näher
      - ZEEBE_BROKER_THREADS_CPUTHREADCOUNT=2
      - ZEEBE_BROKER_THREADS_IOTHREADCOUNT=2
      - ZEEBE_BROKER_DATA_SNAPSHOT_PERIOD=30m
      # Elasticsearch Exporter realistischer
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_INDEX_PREFIX=zeebe-record
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1000
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_DELAY=1s
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      - CAMUNDA_DATABASE_URL=http://elasticsearch:9200
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/8080'" ]
#      interval: 15s
#      timeout: 5s
#      retries: 20
#      start_period: 120s
    healthcheck:
      test: ["CMD-SHELL", "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 120s
    depends_on:
      - elasticsearch

    networks:
      - camunda-platform

  zeebe1: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#zeebe
    image: camunda/zeebe:${CAMUNDA_ZEEBE_VERSION}
    container_name: zeebe1
    environment:
      - ZEEBE_LOG_LEVEL=info
      - ZEEBE_BROKER_GATEWAY_ENABLE=false
      - ZEEBE_BROKER_CLUSTER_CLUSTER_SIZE=3
      - ZEEBE_BROKER_CLUSTER_REPLICATION_FACTOR=3
      - ZEEBE_BROKER_CLUSTER_PARTITIONS_COUNT=3
      - ZEEBE_BROKER_CLUSTER_NODE_ID=1
      - ZEEBE_BROKER_CLUSTER_INITIAL_CONTACT_POINTS=zeebe0:26502,zeebe1:26502,zeebe2:26502
      - ZEEBE_BROKER_NETWORK_ADVERTISED_HOST=zeebe1
      - ZEEBE_BROKER_NETWORK_COMMAND_API_PORT=26501
      - ZEEBE_BROKER_NETWORK_INTERNAL_API_PORT=26502
      - ZEEBE_BROKER_NETWORK_MONITORING_API_PORT=9601
      #Threads & Snapshots porduktiv-näher
      - ZEEBE_BROKER_THREADS_CPUTHREADCOUNT=2
      - ZEEBE_BROKER_THREADS_IOTHREADCOUNT=2
      - ZEEBE_BROKER_DATA_SNAPSHOT_PERIOD=30m
      # Elasticsearch Exporter realistischer
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_INDEX_PREFIX=zeebe-record
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1000
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_DELAY=1s
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      - CAMUNDA_DATABASE_URL=http://elasticsearch:9200
      - JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m
    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/8080'" ]
#      interval: 15s
#      timeout: 5s
#      retries: 20
#      start_period: 120s
    healthcheck:
      test: ["CMD-SHELL", "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 120s
    depends_on:
      - elasticsearch
      - zeebe0
    volumes:
      - ./config/zeebe/broker-1.yaml:/usr/local/zeebe/config/application.yaml:ro
      - zeebe1:/usr/local/zeebe/data
    networks:
      - camunda-platform

  zeebe2: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#zeebe
    image: camunda/zeebe:${CAMUNDA_ZEEBE_VERSION}
    container_name: zeebe2
    environment:
      - ZEEBE_LOG_LEVEL=info
      - ZEEBE_BROKER_GATEWAY_ENABLE=false
      - ZEEBE_BROKER_CLUSTER_CLUSTER_SIZE=3
      - ZEEBE_BROKER_CLUSTER_REPLICATION_FACTOR=3
      - ZEEBE_BROKER_CLUSTER_PARTITIONS_COUNT=3
      - ZEEBE_BROKER_CLUSTER_NODE_ID=2
      - ZEEBE_BROKER_CLUSTER_INITIAL_CONTACT_POINTS=zeebe0:26502,zeebe1:26502,zeebe2:26502
      - ZEEBE_BROKER_NETWORK_ADVERTISED_HOST=zeebe2
      - ZEEBE_BROKER_NETWORK_COMMAND_API_PORT=26501
      - ZEEBE_BROKER_NETWORK_INTERNAL_API_PORT=26502
      - ZEEBE_BROKER_NETWORK_MONITORING_API_PORT=9602
      #Threads & Snapshots porduktiv-näher
      - ZEEBE_BROKER_THREADS_CPUTHREADCOUNT=2
      - ZEEBE_BROKER_THREADS_IOTHREADCOUNT=2
      - ZEEBE_BROKER_DATA_SNAPSHOT_PERIOD=30m
      # Elasticsearch Exporter realistischer
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_INDEX_PREFIX=zeebe-record
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1000
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_DELAY=1s
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      - CAMUNDA_DATABASE_URL=http://elasticsearch:9200
      - JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m
    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD-SHELL", "bash -lc 'echo > /dev/tcp/127.0.0.1/8080'" ]
#      interval: 15s
#      timeout: 5s
#      retries: 20
#      start_period: 120s
    healthcheck:
      test: ["CMD-SHELL", "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 120s
    depends_on:
      - elasticsearch
      - zeebe1
    volumes:
      - ./config/zeebe/broker-2.yaml:/usr/local/zeebe/config/application.yaml:ro
      - zeebe2:/usr/local/zeebe/data
    networks:
      - camunda-platform

# Standalone Zeebe Gateway
  zeebe-gateway:
    image: camunda/zeebe:${CAMUNDA_ZEEBE_VERSION}
    container_name: zeebe-gateway
    command: ["/usr/local/bin/startup.sh", "--", "gateway"]
    volumes:
      - ./config/zeebe/gateway.yaml:/usr/local/zeebe/config/application.yaml:ro
    ports:
      - "26500:26500"   #gRPC for Clients
      - "9600:9600"     #monitoring/health of gateway
    environment:
      - ZEEBE_STANDALONE_GATEWAY=true
      - ZEEBE_LOG_LEVEL=info
      - ZEEBE_GATEWAY_NETWORK_HOST=0.0.0.0
      - ZEEBE_GATEWAY_NETWORK_PORT=26500
      - ZEEBE_GATEWAY_CLUSTER_MEMBER_ID=zeebe-gateway
      - ZEEBE_GATEWAY_MONITORING_ENABLED=true
      - ZEEBE_GATEWAY_MONITORING_PORT=9600

    healthcheck:
      test: [ "CMD-SHELL", "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1" ]
    depends_on:
      - zeebe0
      - zeebe1
      - zeebe2
    networks:
      - camunda-platform

  operate: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#operate
    image: camunda/operate:${CAMUNDA_OPERATE_VERSION}
    container_name: operate
    ports:
      - "8081:8080"
    environment: # https://docs.camunda.io/docs/self-managed/operate-deployment/configuration/
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=zeebe-gateway:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_PREFIX=zeebe-record
      - CAMUNDA_OPERATE_CSRFPREVENTIONENABLED=false
      - CAMUNDA_DATABASE_URL=http://elasticsearch:9200
      - management.endpoints.web.exposure.include=health
      - management.endpoint.health.probes.enabled=true
    healthcheck:
      test: [ "CMD-SHELL", "wget -O - -q 'http://localhost:8080/actuator/health/readiness'" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    networks:
      - camunda-platform
    depends_on:
      zeebe-gateway:
        condition: service_started
      elasticsearch:
        condition: service_healthy

  tasklist: # https://docs.camunda.io/docs/self-managed/platform-deployment/docker/#tasklist
    image: camunda/tasklist:${CAMUNDA_TASKLIST_VERSION}
    container_name: tasklist
    ports:
      - "8082:8080"
    environment: # https://docs.camunda.io/docs/self-managed/tasklist-deployment/configuration/
      - CAMUNDA_TASKLIST_ZEEBE_GATEWAYADDRESS=zeebe-gateway:26500
      - CAMUNDA_TASKLIST_ELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_URL=http://elasticsearch:9200
      - CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_PREFIX=zeebe-record
      - CAMUNDA_TASKLIST_CSRFPREVENTIONENABLED=false
      - CAMUNDA_DATABASE_URL=http://elasticsearch:9200
      - management.endpoints.web.exposure.include=health
      - management.endpoint.health.probes.enabled=true
    healthcheck:
      test: [ "CMD-SHELL", "wget -O - -q 'http://localhost:8080/actuator/health/readiness'" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    networks:
      - camunda-platform
    depends_on:
      zeebe-gateway:
        condition: service_started
      elasticsearch:
        condition: service_healthy

  connectors: # https://docs.camunda.io/docs/components/integration-framework/connectors/out-of-the-box-connectors/available-connectors-overview/
    image: camunda/connectors-bundle:${CAMUNDA_CONNECTORS_VERSION}
    container_name: connectors
    ports:
      - "8085:8080"
    environment:
      - CAMUNDA_CLIENT_MODE=self-managed
      - CAMUNDA_CLIENT_ZEEBE_GRPCADDRESS=http://zeebe-gateway:26500
      - OPERATE_CLIENT_BASEURL=http://operate:8080
      - OPERATE_CLIENT_PROFILE=simple
      - management.endpoints.web.exposure.include=health
      - management.endpoint.health.probes.enabled=true
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health/readiness" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    env_file: connector-secrets.txt
    networks:
      - camunda-platform
    depends_on:
      - zeebe-gateway
      - operate

volumes:
  zeebe0:
  zeebe1:
  zeebe2:
  elastic:

networks:
  camunda-platform:
